{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "UmbracoDeploySchema",
  "type": "object",
  "properties": {
    "Umbraco": {
      "$ref": "#/definitions/UmbracoDefinition"
    }
  },
  "definitions": {
    "UmbracoDefinition": {
      "type": "object",
      "description": "Configuration container for all Umbraco products.",
      "properties": {
        "Deploy": {
          "$ref": "#/definitions/UmbracoDeployDefinition"
        }
      }
    },
    "UmbracoDeployDefinition": {
      "type": "object",
      "description": "Configuration of Umbraco Deploy.",
      "properties": {
        "Settings": {
          "$ref": "#/definitions/DeploySettings"
        },
        "ImportOnStartup": {
          "$ref": "#/definitions/DeployImportOnStartupSettings"
        },
        "Project": {
          "$ref": "#/definitions/DeployProjectConfig"
        },
        "Debug": {
          "$ref": "#/definitions/DebugSettings"
        }
      }
    },
    "DeploySettings": {
      "type": "object",
      "description": "Contains the Deploy settings.",
      "properties": {
        "ApiKey": {
          "type": "string",
          "description": "Gets or sets the API key.",
          "x-deprecated": true,
          "x-deprecatedMessage": "Set the ApiSecret to a cryptographically random value of 64 bytes instead for improved security."
        },
        "ApiSecret": {
          "type": "string",
          "description": "Gets or sets the API secret.",
          "format": "byte"
        },
        "EnableSignatureCacheReads": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether cached signatures are used.",
          "default": true
        },
        "ReloadMemoryCacheFollowingDiskReadOperation": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to trigger a reload of the memory cache following\nan extraction of schema from .uda files to update the Umbraco installation.",
          "default": false
        },
        "SuppressCacheRefresherNotifications": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether cache refresher notifications triggered following a deployment operation are suppressed.",
          "default": false
        },
        "AllowDomainsDeploymentOperations": {
          "description": "Gets a value indicating the domains (or \"Culture & Hostname\" settings) to include in deployments.",
          "default": "None",
          "oneOf": [
            {
              "$ref": "#/definitions/DomainsDeploymentOperations"
            }
          ]
        },
        "AllowPublicAccessDeploymentOperations": {
          "description": "Gets a value indicating the public access rules to include in deployments.",
          "default": "AddOrUpdate",
          "oneOf": [
            {
              "$ref": "#/definitions/PublicAccessEntryDeploymentOperations"
            }
          ]
        },
        "TrashedContentDeploymentOperations": {
          "description": "Gets or sets a value indicating options for including trashed content in an export and processing during import.",
          "default": "Import",
          "oneOf": [
            {
              "$ref": "#/definitions/TrashedContentDeploymentOperations"
            }
          ]
        },
        "ExcludedEntityTypes": {
          "type": "array",
          "description": "Gets or sets the excluded entity types.",
          "items": {
            "type": "string"
          }
        },
        "ValueConnectors": {
          "type": "object",
          "description": "Gets or sets the property editor alias (key) to value connector type name (value) binding.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Edition": {
          "description": "Gets or sets the Deploy edition.",
          "default": "Default",
          "oneOf": [
            {
              "$ref": "#/definitions/Edition"
            }
          ]
        },
        "PreferLocalDbConnectionString": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to prefer automatically initializing a LocalDB connection string (if not explicitly set and LocalDB is available).",
          "default": false
        },
        "SourceDeployBatchSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Gets or sets a batch size for source deployments. A null value indicates no batching will take place.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "PackageBatchSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Gets or sets a batch size for package processing deployments. A null value indicates no batching will take place.",
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0
        },
        "MaxRequestLength": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Gets or sets the maximum request length (in bytes) of file transfers between environments. If not manually configured, will fallback to the CMS MaxRequestLength (converted from KB to bytes) and finally to a default value of 16777216 bytes (16MB).",
          "format": "int64"
        },
        "HideVersionDetails": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to hide the version details from the management dashboard.",
          "default": false
        },
        "HideConfigurationDetails": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to hide the configuration details from the management dashboard.",
          "default": false
        },
        "ResolveUserInTargetEnvironment": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to resolve user's in the target environment for a deploy operation by email address.\nIf the email of a user in the target environment matches the email address of the user that initiated the transfer or restore\noperation, their account will be associated with the content and media updates.",
          "default": true
        },
        "AllowIgnoreDependenciesOperations": {
          "description": "Gets or sets a value indicating for which operations ignoring dependencies are allowed.",
          "default": "None",
          "oneOf": [
            {
              "$ref": "#/definitions/IgnoreDependenciesOperations"
            }
          ]
        },
        "IgnoreBrokenDependenciesBehavior": {
          "description": "Gets or sets a value indicating for which operations dependencies are ignored.",
          "default": "Restore",
          "oneOf": [
            {
              "$ref": "#/definitions/IgnoreBrokenDependenciesBehavior"
            }
          ]
        },
        "ValidateDependenciesOnImport": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dependencies are validated on import.",
          "default": true
        },
        "PostDeploySchemaOperation": {
          "description": "Gets or sets the operation to perform after schema deployment.",
          "default": "None",
          "oneOf": [
            {
              "$ref": "#/definitions/PostDeploySchemaOperation"
            }
          ]
        },
        "TransferDictionaryAsContent": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dictionary items should be transferred as content via the back-office (or, if false, as schema via .uda files).",
          "default": false
        },
        "IgnoreMissingLanguagesForDictionaryItems": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether missing languages in dictionary items trigger a schema mismatch error.",
          "default": false
        },
        "SetEmptyDictionaryItemsOnTransfer": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether empty values will overwrite existing values when transferring dictionary items.",
          "default": true
        },
        "ContinueOnMediaFilePathTooLongException": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to continue or throw on media file path too long exceptions.",
          "default": false
        },
        "MediaFileChecksumCalculationMethod": {
          "description": "Gets or sets a value indicating the method to use for calculating media file checksum values.",
          "default": "PartialFileContents",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFileChecksumCalculationMethod"
            }
          ]
        },
        "ExportMemberGroups": {
          "type": "boolean",
          "description": "Use this to disable export of member groups to disk.\nCan be used to prevent issues when using externally stored member groups not managed by Umbraco.",
          "default": true
        },
        "TransferMemberGroupsAsContent": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether member group should be transferred as content via the back-office (or, if false, as schema via .uda files).",
          "default": false
        },
        "AllowMembersDeploymentOperations": {
          "description": "Gets or sets a value indicating which operations are supported for members.",
          "default": "None",
          "oneOf": [
            {
              "$ref": "#/definitions/MembersDeploymentOperations"
            }
          ]
        },
        "RelationTypes": {
          "type": "object",
          "description": "Gets or sets a list of relation types with details on how they should be treated in Deploy operations.",
          "additionalProperties": {
            "$ref": "#/definitions/RelationMode"
          }
        },
        "NumberOfSignaturesToUseAllRelationCache": {
          "type": "integer",
          "description": "Gets or sets a value for the number of artifact signatures to process in a deploy operation before utilising a cache for the full set of relations.",
          "format": "int32",
          "default": 100,
          "maximum": 2147483647.0,
          "minimum": 0.0
        },
        "Suspensions": {
          "description": "Gets or sets the suspension options for each operation.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploySuspensionSettings"
            }
          ]
        },
        "SessionTimeout": {
          "type": "string",
          "description": "Gets or sets the session timeout.",
          "format": "duration",
          "default": "00:20:00"
        },
        "SourceDeployTimeout": {
          "type": "string",
          "description": "Gets or sets the source deploy timeout.",
          "format": "duration",
          "default": "00:20:00"
        },
        "DatabaseCommandTimeout": {
          "type": "string",
          "description": "Gets or sets the database command timeout.",
          "format": "duration",
          "default": "00:20:00"
        },
        "HttpClientTimeout": {
          "type": "string",
          "description": "Gets or sets the HTTP client timeout.",
          "format": "duration",
          "default": "00:20:00"
        },
        "DiskOperationsTimeout": {
          "type": "string",
          "description": "Gets or sets the disk operations timeout.",
          "format": "duration",
          "default": "00:05:00"
        },
        "ExportUserGroups": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to export user groups to disk.",
          "default": false
        },
        "AllowWebhooksDeploymentOperations": {
          "description": "Gets or sets a value indicating which operations are supported for webhooks.",
          "default": "None",
          "oneOf": [
            {
              "$ref": "#/definitions/WebhooksDeploymentOperations"
            }
          ]
        }
      }
    },
    "DomainsDeploymentOperations": {
      "type": "string",
      "description": "Specifies options for handling content \"Culture & Hostnames\" settings.",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Culture",
        "AbsolutePath",
        "Hostname",
        "All"
      ],
      "enum": [
        "None",
        "Culture",
        "AbsolutePath",
        "Hostname",
        "All"
      ]
    },
    "PublicAccessEntryDeploymentOperations": {
      "type": "string",
      "description": "Specifies options for handling content \"public access\" settings.",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "AddOrUpdate",
        "Remove",
        "All"
      ],
      "enum": [
        "None",
        "AddOrUpdate",
        "Remove",
        "All"
      ]
    },
    "TrashedContentDeploymentOperations": {
      "type": "string",
      "description": "Specifies options for handling trashed content (documents, media and members).",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Export",
        "Import",
        "All"
      ],
      "enum": [
        "None",
        "Export",
        "Import",
        "All"
      ]
    },
    "Edition": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Default",
        "BackOfficeOnly"
      ],
      "enum": [
        "Default",
        "BackOfficeOnly"
      ]
    },
    "IgnoreDependenciesOperations": {
      "type": "string",
      "description": "Specifies options for ignoring dependencies when restoring or transferring.",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Restore",
        "Transfer",
        "All"
      ],
      "enum": [
        "None",
        "Restore",
        "Transfer",
        "All"
      ]
    },
    "IgnoreBrokenDependenciesBehavior": {
      "type": "string",
      "description": "Specifies options for ignoring broken dependencies (instead of failing deployment when trashed or deleted dependencies are encountered).",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Restore",
        "Transfer",
        "All"
      ],
      "enum": [
        "None",
        "Restore",
        "Transfer",
        "All"
      ]
    },
    "PostDeploySchemaOperation": {
      "type": "string",
      "description": "Specifies the operation to perform after schema deployment.",
      "x-enumNames": [
        "None",
        "CleanSchema",
        "ExtractSchema"
      ],
      "enum": [
        "None",
        "CleanSchema",
        "ExtractSchema"
      ]
    },
    "MediaFileChecksumCalculationMethod": {
      "type": "string",
      "description": "Specifies options for calculating checksums for media files.",
      "x-enumNames": [
        "PartialFileContents",
        "Metadata"
      ],
      "enum": [
        "PartialFileContents",
        "Metadata"
      ]
    },
    "MembersDeploymentOperations": {
      "type": "string",
      "description": "Specifies options for deployment operations involving members.",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "Restore",
        "Transfer",
        "All"
      ],
      "enum": [
        "None",
        "Restore",
        "Transfer",
        "All"
      ]
    },
    "RelationMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Exclude",
        "Weak",
        "Strong"
      ],
      "enum": [
        "Exclude",
        "Weak",
        "Strong"
      ]
    },
    "DeploySuspensionSettings": {
      "type": "object",
      "description": "Contains Deploy suspension settings.",
      "properties": {
        "DiskRead": {
          "description": "Gets or sets the suspension options used during the disk read operation.",
          "default": "All",
          "oneOf": [
            {
              "$ref": "#/definitions/SuspensionOptions"
            }
          ]
        },
        "PartialRestore": {
          "description": "Gets or sets the suspension options used during the partial restore operation.",
          "default": "All",
          "oneOf": [
            {
              "$ref": "#/definitions/SuspensionOptions"
            }
          ]
        },
        "Restore": {
          "description": "Gets or sets the suspension options used during the restore operation.",
          "default": "All",
          "oneOf": [
            {
              "$ref": "#/definitions/SuspensionOptions"
            }
          ]
        },
        "Deploy": {
          "description": "Gets or sets the suspension options used during the deploy operation.",
          "default": "All",
          "oneOf": [
            {
              "$ref": "#/definitions/SuspensionOptions"
            }
          ]
        },
        "Import": {
          "description": "Gets or sets the suspension options used during the import operation.",
          "default": "All",
          "oneOf": [
            {
              "$ref": "#/definitions/SuspensionOptions"
            }
          ]
        },
        "Export": {
          "description": "Gets or sets the suspension options used during the export operation.",
          "default": "All",
          "oneOf": [
            {
              "$ref": "#/definitions/SuspensionOptions"
            }
          ]
        }
      }
    },
    "SuspensionOptions": {
      "type": "string",
      "description": "The suspension options used during an operation.",
      "x-enumFlags": true,
      "x-enumNames": [
        "None",
        "ScheduledPublishing",
        "Examine",
        "DocumentCache",
        "Signatures",
        "All"
      ],
      "enum": [
        "None",
        "ScheduledPublishing",
        "Examine",
        "DocumentCache",
        "Signatures",
        "All"
      ]
    },
    "WebhooksDeploymentOperations": {
      "type": "string",
      "description": "Specifies options for handling webhooks.",
      "x-enumNames": [
        "None",
        "All"
      ],
      "enum": [
        "None",
        "All"
      ]
    },
    "DeployImportOnStartupSettings": {
      "type": "object",
      "description": "Contains the Deploy import on startup settings.",
      "properties": {
        "Enabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to import content and/or schema on startup.",
          "default": true
        },
        "Files": {
          "type": "array",
          "description": "Gets or sets a value containing the file paths to the ZIP archives to import on startup.",
          "default": [
            "~/umbraco/Deploy/import-on-startup.zip"
          ],
          "items": {
            "type": "string"
          }
        },
        "FileAction": {
          "description": "Gets or sets a value indicating how to handle the import files after successful import.",
          "default": "Delete",
          "oneOf": [
            {
              "$ref": "#/definitions/ImportOnStartupFileAction"
            }
          ]
        },
        "WarningsAsErrors": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether warnings should be considered as errors when importing schema and/or content on startup.",
          "default": false
        },
        "EntityTypes": {
          "type": "array",
          "description": "Gets or sets the entity types that should be processed on import.",
          "items": {
            "type": "string"
          }
        },
        "Cultures": {
          "type": "array",
          "description": "Gets or sets the cultures that should be processed on import.",
          "items": {
            "type": "string"
          }
        },
        "Username": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets the user name for which the import on startup will be processed."
        }
      }
    },
    "ImportOnStartupFileAction": {
      "type": "string",
      "description": "Specifies options for handling import files after successful import.",
      "x-enumNames": [
        "None",
        "Archive",
        "Delete"
      ],
      "enum": [
        "None",
        "Archive",
        "Delete"
      ]
    },
    "DeployProjectConfig": {
      "type": "object",
      "description": "The configuration of Deploy workspaces",
      "properties": {
        "CurrentWorkspaceName": {
          "type": "string",
          "description": "Gets or sets the name of the current workspace."
        },
        "Workspaces": {
          "type": "array",
          "description": "Gets or set the list of workspaces.",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      }
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        }
      }
    },
    "DebugSettings": {
      "type": "object",
      "properties": {
        "IsDebug": {
          "type": "boolean"
        },
        "IsSqlAzure": {
          "type": "boolean"
        },
        "EnvironmentId": {
          "type": "string"
        },
        "EnvironmentName": {
          "type": "string"
        },
        "IsRunningCloud": {
          "type": "boolean"
        },
        "IsRunningHosted": {
          "type": "boolean"
        },
        "PortalUrl": {
          "type": "string"
        }
      }
    }
  }
}